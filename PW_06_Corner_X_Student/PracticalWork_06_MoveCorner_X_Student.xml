<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Rexroth" productName="ctrlX PLC Engineering" productVersion="ctrlX PLC 1.16.1" creationDateTime="2024-05-13T11:22:06.1664501" />
  <contentHeader name="Practical Work One" version="0.0" modificationDateTime="2024-05-13T11:21:06.0697304" organization="HEVS" author="Cedric Lenoir">
    <Comment>First Test for Practical Work One</Comment>
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Author" type="string">Cedric Lenoir</property>
          <property name="Company" type="string">HEVS</property>
          <property name="Description" type="string">First Test for Practical Work One</property>
          <property name="Project" type="string">PracticalWork_06_MoveCornerYZ</property>
          <property name="Title" type="string">Practical Work One</property>
          <property name="Version" type="version">0.0</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations>
      <configuration name="PracticalWork_01">
        <resource name="BaseInterfaceUa">
          <task name="MainTask" priority="30">
            <pouInstance name="PRG_Gripper" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="PRG_MapBox" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="ExternalEvent" Interval="t#2ms" IntervalUnit="ms" ExternalEvent="TASK_EXTERNAL_EVENT_07" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="true" Time="200" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>78c08a0f-8c0a-4cae-993a-8ea4cc6c8e72</ObjectId>
              </data>
            </addData>
          </task>
          <globalVars name="GVL_Abox">
            <variable name="uaAboxInterface">
              <type>
                <derived name="UA_AboxInterface" />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>31b95c15-5cf4-485c-8394-f9c0ad5586f3</ObjectId>
              </data>
            </addData>
          </globalVars>
          <globalVars name="GVL_AxisDefines">
            <variable name="X_Axis">
              <type>
                <derived name="MB_AXISIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="AxisName">
                    <simpleValue value="'Axis_1'" />
                  </value>
                  <value member="AxisNo">
                    <simpleValue value="1" />
                  </value>
                </structValue>
              </initialValue>
            </variable>
            <variable name="Y_Axis">
              <type>
                <derived name="MB_AXISIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="AxisName">
                    <simpleValue value="'Axis_2'" />
                  </value>
                  <value member="AxisNo">
                    <simpleValue value="2" />
                  </value>
                </structValue>
              </initialValue>
            </variable>
            <variable name="Z_Axis">
              <type>
                <derived name="MB_AXISIF_REF" />
              </type>
              <initialValue>
                <structValue>
                  <value member="AxisName">
                    <simpleValue value="'Axis_3'" />
                  </value>
                  <value member="AxisNo">
                    <simpleValue value="3" />
                  </value>
                </structValue>
              </initialValue>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>fbed7d43-1b1d-44ab-b273-bda7af868979</ObjectId>
              </data>
            </addData>
          </globalVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_DigitalInput_32">
                <baseType>
                  <struct>
                    <variable name="Input_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Input_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a8f884db-ac4f-40d0-bcab-8badc6587dcc</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_DigitalOutput_32">
                <baseType>
                  <struct>
                    <variable name="Output_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Output_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7b52e73f-21ed-4643-ae78-7cbc7194e35a</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_ButtonAndSignal">
                <baseType>
                  <struct>
                    <variable name="In_Estop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="In_Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="In_Start">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="In_Stop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Out_Idle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Out_Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Out_Stopped">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b3f9a3b5-82f9-447e-a261-cb2d18ffb6eb</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_O300_DL">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6026491a-5615-4c42-b2f8-5562044ffab5</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_O300_ZL">
                <baseType>
                  <struct>
                    <variable name="BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0292b894-9834-4595-b44c-87810191b2ca</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_U300_D50">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9f70432a-c970-455e-a9e2-baa1b526f168</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_PlcOpenFbs">
                <baseType>
                  <struct>
                    <variable name="bEnableRemote">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> If TRUE, the FB are driven manually from the HMI</xhtml>
                      </documentation>
                    </variable>
                    <variable name="bEnableReadStatus">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bEnableReadPosition">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bEnableReadVelocity">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bMoveAbs">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bStop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bPowerOn">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bReset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="strGetAxisStatus">
                      <type>
                        <string />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> From arAxisStatus_gb[1].Data.PLCopenState;
 Exist in Data Layer too, s=motion/axs/Axis_X/state/opstate/plcopen</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>91228204-eb16-473b-8fe0-800c02ac25d9</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	List of commands for MoveAbsolute
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_U300_P50">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7f0e2eb1-ba19-4d1b-be94-9623d8b4ba56</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_Schunk_mms">
                <baseType>
                  <struct>
                    <variable name="Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e1630ce8-bc96-43e5-9e0c-58c82b66b1bc</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_Balluf_bcm0002">
                <baseType>
                  <struct>
                    <variable name="Data_1">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Data_2">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Data_3">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Temperature">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="Status">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6fac8e51-2212-48d9-b853-8070ad243c78</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_Festo">
                <baseType>
                  <struct>
                    <variable name="SetOut">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>634e16b1-da38-4e2b-b9e1-42ee4bdb38cc</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_AnalogIn">
                <baseType>
                  <struct>
                    <variable name="IW_04">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_06">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_08">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_10">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_12">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_14">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_16">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="IW_18">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9609e6b4-7275-4343-861c-fef510482801</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_AnalogOut">
                <baseType>
                  <struct>
                    <variable name="QW_04">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="QW_06">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="QW_08">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="QW_10">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c2ad5a14-bba9-482f-9eb2-2a91ac4fe72c</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="UA_AboxInterface">
                <baseType>
                  <struct>
                    <variable name="uaButtonAndSignal">
                      <type>
                        <derived name="UA_ButtonAndSignal" />
                      </type>
                    </variable>
                    <variable name="uaAnalogIn">
                      <type>
                        <derived name="UA_AnalogIn" />
                      </type>
                    </variable>
                    <variable name="uaAnalogOut">
                      <type>
                        <derived name="UA_AnalogOut" />
                      </type>
                    </variable>
                    <variable name="uaDigitalIn">
                      <type>
                        <derived name="UA_DigitalInput_32" />
                      </type>
                    </variable>
                    <variable name="uaDigitalOut">
                      <type>
                        <derived name="UA_DigitalOutput_32" />
                      </type>
                    </variable>
                    <variable name="uaO300_DL_Optic">
                      <type>
                        <derived name="UA_O300_DL" />
                      </type>
                    </variable>
                    <variable name="uaO300_ZL_Optic">
                      <type>
                        <derived name="UA_O300_ZL" />
                      </type>
                    </variable>
                    <variable name="uaU300_D50_Sound">
                      <type>
                        <derived name="UA_U300_D50" />
                      </type>
                    </variable>
                    <variable name="uaU300_P50_Sound">
                      <type>
                        <derived name="UA_U300_P50" />
                      </type>
                    </variable>
                    <variable name="uaSchunk">
                      <type>
                        <derived name="UA_Schunk_mms" />
                      </type>
                    </variable>
                    <variable name="uaSchunkGripper">
                      <type>
                        <derived name="UA_Festo" />
                      </type>
                    </variable>
                    <variable name="uaAccelerometer">
                      <type>
                        <derived name="UA_Balluf_bcm0002" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>03a0b2ac-89d3-4829-82ce-c9ce9256e8f7</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_SetMotionParam">
                <baseType>
                  <struct>
                    <variable name="rPosition_mm">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rVeloctiy_mm_s">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rAcceleration_mm_s2">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rDeceleration_mm_s2">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="rJerk_mm_s3">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4ebefe34-98e8-4b46-a015-351f1e587d13</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	List of dynamic parameters for Move Absolute
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_StateMachineInfo">
                <baseType>
                  <struct>
                    <variable name="diState">
                      <type>
                        <DINT />
                      </type>
                    </variable>
                    <variable name="eState">
                      <type>
                        <derived name="E_ExecuteCorner" />
                      </type>
                    </variable>
                    <variable name="strState">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b0bc352a-3795-4e69-ba2c-5318db5e9d2b</ObjectId>
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	State Machine Info      
</xhtml>
                </documentation>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_PackStates">
                <baseType>
                  <enum>
                    <values>
                      <value name="NotActive" value="999" />
                      <value name="Aborted" value="10" />
                      <value name="Clearing" value="20" />
                      <value name="Stopped" value="30" />
                      <value name="Resetting" value="40" />
                      <value name="Idle" value="50" />
                      <value name="Starting" value="60" />
                      <value name="Stopping" value="70" />
                      <value name="Aborting" value="80" />
                      <value name="Execute" value="90" />
                      <value name="Holding" value="100" />
                      <value name="Held" value="110" />
                      <value name="Unholding" value="120" />
                      <value name="Suspending" value="200" />
                      <value name="Suspended" value="210" />
                      <value name="Unsuspending" value="220" />
                      <value name="Completing" value="300" />
                      <value name="Complete" value="310" />
                    </values>
                    <baseType>
                      <DINT />
                    </baseType>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a82c83d0-6bfb-4016-ae0d-d8d2eb401ddf</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_PackState">
                <baseType>
                  <struct>
                    <variable name="Aborted">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Clearing">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Stopped">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Resetting">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Idle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Starting">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Stopping">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Aborting">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Holding">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Held Loop </xhtml>
                      </documentation>
                    </variable>
                    <variable name="Held">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Unholding">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Suspending">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Suspended Loop </xhtml>
                      </documentation>
                    </variable>
                    <variable name="Suspended">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Unsuspending">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Completing">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Complete Loop </xhtml>
                      </documentation>
                    </variable>
                    <variable name="Complete">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>73908a29-0b5c-458b-b446-ad01fcefda61</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_Clearing">
                <baseType>
                  <enum>
                    <values>
                      <value name="eIdle" value="99" />
                      <value name="eErrorStop" value="10" />
                      <value name="eDisabled" value="20" />
                      <value name="eEnabled" value="30" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c2c8432c-60b0-42ed-935e-917d6ddf7b68</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_Stopping">
                <baseType>
                  <enum>
                    <values>
                      <value name="Idle" value="99" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>1082dedb-5527-49df-b110-5490512a58f7</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_Aborted">
                <baseType>
                  <enum>
                    <values>
                      <value name="Idle" value="99" />
                      <value name="Disabled" value="1" />
                      <value name="ErrorStop" value="2" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8ab0d110-7ef2-44c9-856b-3edda67beff7</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_Resetting">
                <baseType>
                  <enum>
                    <values>
                      <value name="Idle" value="99" />
                      <value name="eGripperSetOpen" value="10" />
                      <value name="eGripperIsOpen" value="20" />
                      <value name="eMotionInit_Z" value="110" />
                      <value name="eMotionInitDone_Z" value="120" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ffc13a4f-71bd-4053-b816-c3e7353884a7</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_Starting">
                <baseType>
                  <enum>
                    <values>
                      <value name="Idle" value="99" />
                      <value name="eMotionStarting" value="10" />
                      <value name="eMotionStartingDone" value="20" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8574ae67-1fc0-4656-8e16-571529f1a584</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_RemotePositions">
                <baseType>
                  <struct>
                    <variable name="lrPositionDown_Z">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="-40" />
                      </initialValue>
                    </variable>
                    <variable name="lrPositionUp_Z">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="-10" />
                      </initialValue>
                    </variable>
                    <variable name="lrPosition_Y">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="lrPositionBck_X">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="-20" />
                      </initialValue>
                    </variable>
                    <variable name="lrPositionFwd_X">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8a3cf65a-db13-4abf-b4e5-ed6c70bc741b</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_InOperationBase">
                <baseType>
                  <enum>
                    <values>
                      <value name="Idle" value="999" />
                      <value name="Init" value="10" />
                      <value name="InOp" value="20" />
                      <value name="Error" value="30" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a9359279-3f40-47d3-ae17-e926eb3489d1</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_InOpGripper">
                <baseType>
                  <enum>
                    <values>
                      <value name="IsIdle" value="999" />
                      <value name="IsOpen" value="10" />
                      <value name="IsClosed" value="20" />
                      <value name="PartPresent" value="30" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c144f9bc-04ac-43b8-9eab-3b0226c81fd6</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_TestFbGripperHmi">
                <baseType>
                  <struct>
                    <variable name="executeOpenDone">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="executeCloseDone">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="gripperStateClosed">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="gripperStateOpen">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="gripperStatePartPresent">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="gripperStateError">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="gripperStateInOp">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e8ec25aa-3315-4c9e-9c35-687083d2f5c5</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_ExecuteDone">
                <baseType>
                  <enum>
                    <values>
                      <value name="Idle" value="999" />
                      <value name="Init" value="10" />
                      <value name="InOp" value="20" />
                      <value name="Done" value="30" />
                      <value name="Error" value="40" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0239a653-e5ee-4ff7-b7b0-d124031a111f</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_Aborting">
                <baseType>
                  <enum>
                    <values>
                      <value name="Idle" value="99" />
                      <value name="Disabled" value="1" />
                      <value name="ErrorStop" value="2" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>38acc82c-b7d9-4192-b4fb-326340db6f3a</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PRG_Gripper" pouType="program">
                <interface>
                  <localVars>
                    <variable name="fbGripperState">
                      <type>
                        <derived name="FB_GripperState" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">*********************************************************************************************************************
    	YOUR VARIABLES HERE
	*********************************************************************************************************************</xhtml>
                      </documentation>
                    </variable>
                    <variable name="fbOpenGripper">
                      <type>
                        <derived name="FB_OpenGripper" />
                      </type>
                    </variable>
                    <variable name="fbCloseGripper">
                      <type>
                        <derived name="FB_CloseGripper" />
                      </type>
                    </variable>
                    <variable name="uliCount">
                      <type>
                        <ULINT />
                      </type>
                    </variable>
                    <variable name="bInitDone">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="fbPackStates">
                      <type>
                        <derived name="FB_PackStates" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
		Pack Partial state machine
	</xhtml>
                      </documentation>
                    </variable>
                    <variable name="eAborting">
                      <type>
                        <derived name="E_Aborting" />
                      </type>
                    </variable>
                    <variable name="eAborted">
                      <type>
                        <derived name="E_Aborted" />
                      </type>
                    </variable>
                    <variable name="eClearing">
                      <type>
                        <derived name="E_Clearing" />
                      </type>
                    </variable>
                    <variable name="eResetting">
                      <type>
                        <derived name="E_Resetting" />
                      </type>
                    </variable>
                    <variable name="eStarting">
                      <type>
                        <derived name="E_Starting" />
                      </type>
                    </variable>
                    <variable name="eStopping">
                      <type>
                        <derived name="E_Stopping" />
                      </type>
                    </variable>
                    <variable name="stStateMachineInfo">
                      <type>
                        <derived name="ST_StateMachineInfo" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
		State machine info for Execute
	</xhtml>
                      </documentation>
                    </variable>
                    <variable name="stPlcOpenFbs">
                      <type>
                        <derived name="ST_PlcOpenFbs" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        List of Structures
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="stSetParam_X">
                      <type>
                        <derived name="ST_SetMotionParam" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="rVeloctiy_mm_s">
                            <simpleValue value="2000" />
                          </value>
                          <value member="rAcceleration_mm_s2">
                            <simpleValue value="1000" />
                          </value>
                          <value member="rDeceleration_mm_s2">
                            <simpleValue value="1000" />
                          </value>
                          <value member="rJerk_mm_s3">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="stSetParam_Z">
                      <type>
                        <derived name="ST_SetMotionParam" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="rVeloctiy_mm_s">
                            <simpleValue value="2000" />
                          </value>
                          <value member="rAcceleration_mm_s2">
                            <simpleValue value="1000" />
                          </value>
                          <value member="rDeceleration_mm_s2">
                            <simpleValue value="1000" />
                          </value>
                          <value member="rJerk_mm_s3">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="mcReadActualPos_X">
                      <type>
                        <derived name="MC_ReadActualPosition" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
        List of Function Blocks
    </xhtml>
                      </documentation>
                    </variable>
                    <variable name="mcReadStatus_X">
                      <type>
                        <derived name="MC_ReadStatus" />
                      </type>
                    </variable>
                    <variable name="mcPower_X">
                      <type>
                        <derived name="MC_Power" />
                      </type>
                    </variable>
                    <variable name="mcMoveAbs_X">
                      <type>
                        <derived name="MC_MoveAbsolute" />
                      </type>
                    </variable>
                    <variable name="mcStop_X">
                      <type>
                        <derived name="MC_Stop" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="Deceleration">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="mcReset_X">
                      <type>
                        <derived name="MC_Reset" />
                      </type>
                    </variable>
                    <variable name="mcReadActualPos_Z">
                      <type>
                        <derived name="MC_ReadActualPosition" />
                      </type>
                    </variable>
                    <variable name="mcReadStatus_Z">
                      <type>
                        <derived name="MC_ReadStatus" />
                      </type>
                    </variable>
                    <variable name="mcPower_Z">
                      <type>
                        <derived name="MC_Power" />
                      </type>
                    </variable>
                    <variable name="mcMoveAbs_Z">
                      <type>
                        <derived name="MC_MoveAbsolute" />
                      </type>
                    </variable>
                    <variable name="mcStop_Z">
                      <type>
                        <derived name="MC_Stop" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="Deceleration">
                            <simpleValue value="1" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="mcReset_Z">
                      <type>
                        <derived name="MC_Reset" />
                      </type>
                    </variable>
                    <variable name="GripperIsOpen">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="GripperIsClosed">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="stRemote">
                      <type>
                        <derived name="ST_RemotePositions" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Set position of axes </xhtml>
                      </documentation>
                    </variable>
                    <variable name="stTestFbGripperHmi">
                      <type>
                        <derived name="ST_TestFbGripperHmi" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Check your FB on HMI </xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                  <documentation>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2024 April 02
	
	Summary:	Template of a program using PLCopen on partial Pack State
	            Use a Cyclic Setpoint for motion in Pack Execute.
</xhtml>
                  </documentation>
                </interface>
                <actions>
                  <action name="ACT_ForAxis_X">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(**********************************************************************************************************************
	X Axis
**********************************************************************************************************************)
mcReadStatus_X(Axis := GVL_AxisDefines.X_Axis,
               Enable := stPlcOpenFbs.bEnableReadStatus);

mcReadActualPos_X(Axis := GVL_AxisDefines.X_Axis,
                  Enable := stPlcOpenFbs.bEnableReadPosition);

mcPower_X(Axis := GVL_AxisDefines.X_Axis,
        Enable := (stPlcOpenFbs.bPowerOn AND stPlcOpenFbs.bEnableRemote) OR
                   		NOT stPlcOpenFbs.bEnableRemote AND 
				   		NOT (fbPackStates.state.Aborting OR
                             fbPackStates.state.Aborted));

mcStop_X(Axis := GVL_AxisDefines.X_Axis,
         Execute := (stPlcOpenFbs.bStop AND stPlcOpenFbs.bEnableRemote) OR
                     fbPackStates.state.Stopping);

mcReset_X(Axis := GVL_AxisDefines.X_Axis,
        Execute := (stPlcOpenFbs.bReset AND stPlcOpenFbs.bEnableRemote) OR
                    fbPackStates.state.Aborting                         OR
                    eAborted = E_Aborted.ErrorStop);

mcMoveAbs_X(Axis := GVL_AxisDefines.X_Axis,
            Position := stSetParam_X.rPosition_mm,
            Velocity := stSetParam_X.rVeloctiy_mm_s,
            Acceleration := stSetParam_X.rAcceleration_mm_s2,
            Deceleration := stSetParam_X.rDeceleration_mm_s2,
            Jerk := stSetParam_X.rJerk_mm_s3,
            Execute := (stPlcOpenFbs.bMoveAbs AND stPlcOpenFbs.bEnableRemote)    	OR
					   (eStarting = E_Starting.eMotionStarting)                  	OR
                       (stStateMachineInfo.eState = E_ExecuteCorner.eMoveCornerOne)	OR              
                       (stStateMachineInfo.eState = E_ExecuteCorner.eMoveCornerThree));  
						  
</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>c942ee71-54df-4622-ab74-7fabaf8b5da6</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="ACT_ForAxis_Z">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(**********************************************************************************************************************
	Z Axis
**********************************************************************************************************************)
mcReadStatus_Z(Axis := GVL_AxisDefines.Z_Axis,
               Enable := stPlcOpenFbs.bEnableReadStatus);

mcReadActualPos_Z(Axis := GVL_AxisDefines.Z_Axis,
                  Enable := stPlcOpenFbs.bEnableReadPosition);

mcPower_Z(Axis := GVL_AxisDefines.Z_Axis,
        Enable := (stPlcOpenFbs.bPowerOn AND stPlcOpenFbs.bEnableRemote) OR
                   		NOT stPlcOpenFbs.bEnableRemote AND 
				   		NOT (fbPackStates.state.Aborting OR
                             fbPackStates.state.Aborted));

// Note that a stop without deceleration leads to an error!!
mcStop_Z(Axis := GVL_AxisDefines.Z_Axis,
         Execute := (stPlcOpenFbs.bStop AND stPlcOpenFbs.bEnableRemote) OR
                     fbPackStates.state.Stopping);

mcReset_Z(Axis := GVL_AxisDefines.Z_Axis,
         Execute := (stPlcOpenFbs.bReset AND stPlcOpenFbs.bEnableRemote) OR
                     fbPackStates.state.Aborting);
					 
mcMoveAbs_Z(Axis := GVL_AxisDefines.Z_Axis,
            Position := stSetParam_Z.rPosition_mm,
            Velocity := stSetParam_Z.rVeloctiy_mm_s,
            Acceleration := stSetParam_Z.rAcceleration_mm_s2,
            Deceleration := stSetParam_Z.rDeceleration_mm_s2,
            Jerk := stSetParam_Z.rJerk_mm_s3,
            Execute := (stPlcOpenFbs.bMoveAbs AND stPlcOpenFbs.bEnableRemote)    OR
                       (eResetting = E_Resetting.eMotionInit_Z));  </xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>121ee88f-6e85-4783-aa79-b03395285995</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="ACT_BaseInit">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
    Some inits independant of the Main State Machine
*)
IF NOT bInitDone THEN
	bInitDone := TRUE;
    stPlcOpenFbs.bEnableReadStatus := TRUE;
    stPlcOpenFbs.bEnableReadPosition := TRUE;
    stPlcOpenFbs.bEnableReadVelocity := TRUE;
	// Init values to compile them and send to OPC_UA
	stTestFbGripperHmi.gripperStateClosed := FALSE;
	stTestFbGripperHmi.gripperStateOpen := FALSE;
	stTestFbGripperHmi.gripperStatePartPresent := FALSE;
	stTestFbGripperHmi.gripperStateError := FALSE;
	stTestFbGripperHmi.gripperStateInOp := FALSE;
	stTestFbGripperHmi.executeOpenDone := FALSE;
	stTestFbGripperHmi.executeCloseDone := FALSE;
END_IF

(*
    Remote conditions
*)
IF stPlcOpenFbs.bEnableRemote THEN
    IF mcMoveAbs_X.Done THEN
        stPlcOpenFbs.bMoveAbs := FALSE;
    END_IF
    IF mcStop_X.Done THEN
        stPlcOpenFbs.bStop := FALSE;
        stPlcOpenFbs.bMoveAbs := FALSE;
    END_IF
END_IF

// If remote, pack states are disabled
fbPackStates.SoftEstop := mcReadStatus_X.ErrorStop;
fbPackStates(Enable := NOT stPlcOpenFbs.bEnableRemote,
			 remote := GVL_Abox.uaAboxInterface.uaButtonAndSignal);
			 
(*
	Basically, only Acting state are used, wait state are doing nothing
	But sometimes, we could need to do something.. see Aborted.
*)

IF fbPackStates.state.Aborting THEN
	IF mcReadStatus_X.ErrorStop OR 
       mcReadStatus_Z.ErrorStop THEN
		fbPackStates.Aborting_SC := FALSE;
	ELSE
		fbPackStates.Aborting_SC := TRUE;
	END_IF
ELSE
	;
END_IF

(*
	Even as a wait-state, Aborted need here a state machine, because an axia could be in error state 
	in disabled (Aborted) state.
*)
IF fbPackStates.state.Aborted THEN
	CASE eAborted OF
		E_Aborted.Idle :
			IF mcReadStatus_X.Disabled THEN
				eAborted := E_Aborted.Disabled;
			ELSIF mcReadStatus_X.ErrorStop THEN
				eAborted := E_Aborted.ErrorStop;
			END_IF
		E_Aborted.Disabled :
			IF mcReadStatus_X.ErrorStop THEN
				eAborted := E_Aborted.ErrorStop;
			END_IF
		E_Aborted.ErrorStop :
			IF mcReadStatus_X.Disabled THEN
				eAborted := E_Aborted.Disabled;
			END_IF
	END_CASE
ELSE
	eAborted := E_Aborted.Idle;
END_IF

IF fbPackStates.state.Clearing THEN
	// Reset Gripper in case fbOpenGripper and fbCloseGripper not presentz
	// GripperIsOpen   := TRUE;
	// GripperIsClosed	:= TRUE;	
	IF mcReadStatus_X.Standstill AND
       mcReadStatus_Z.Standstill THEN
		fbPackStates.Clearing_SC := TRUE;
	ELSE
		fbPackStates.Clearing_SC := FALSE;
	END_IF
ELSE
	;
END_IF

IF fbPackStates.state.Stopping THEN
	IF mcReadStatus_X.Standstill AND
       mcReadStatus_Z.Standstill THEN
		fbPackStates.Stopping_SC := TRUE;
	ELSE
		fbPackStates.Stopping_SC := FALSE;
	END_IF
ELSE
	;
END_IF

</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>a39d17b3-4c87-4b44-9064-cff428628cac</ObjectId>
                      </data>
                    </addData>
                  </action>
                  <action name="ACT_ForGripper">
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">fbGripperState.Enable := (stPlcOpenFbs.bEnableRemote)        		OR
                   		 (NOT stPlcOpenFbs.bEnableRemote 		AND 
				   		  NOT (fbPackStates.state.Aborting OR
                               fbPackStates.state.Aborted)); 
fbGripperState(hw := GVL_Abox.uaAboxInterface.uaSchunk);

stTestFbGripperHmi.gripperStateClosed := fbGripperState.IsClosed;
stTestFbGripperHmi.gripperStateOpen := fbGripperState.IsOpen;
stTestFbGripperHmi.gripperStatePartPresent := fbGripperState.PartPresent;
stTestFbGripperHmi.gripperStateError := fbGripperState.Error;
stTestFbGripperHmi.gripperStateInOp := fbGripperState.InOperation;

fbOpenGripper.Execute := (stStateMachineInfo.eState = E_ExecuteCorner.eMoveCornerOneDone) OR 
                         (eResetting = E_Resetting.eGripperSetOpen);

fbCloseGripper.Execute := (stStateMachineInfo.eState = E_ExecuteCorner.eMoveCornerThreeDone);

fbOpenGripper(hwEV := GVL_Abox.uaAboxInterface.uaSchunkGripper,
	          hwSensor := GVL_Abox.uaAboxInterface.uaSchunk,
			  Done =&gt; stTestFbGripperHmi.executeOpenDone);
			  
fbCloseGripper(hwEV := GVL_Abox.uaAboxInterface.uaSchunkGripper,
	          hwSensor := GVL_Abox.uaAboxInterface.uaSchunk,
			  Done =&gt; stTestFbGripperHmi.executeCloseDone);
			  
GripperIsOpen   := fbOpenGripper.Done;
GripperIsClosed	:= fbCloseGripper.Done;</xhtml>
                      </ST>
                    </body>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                        <ObjectId>8cd45c85-2e84-49bb-bab0-9f24432f191f</ObjectId>
                      </data>
                    </addData>
                  </action>
                </actions>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">ACT_BaseInit();
(**********************************************************************************************************************
    Resetting
**********************************************************************************************************************)
IF fbPackStates.state.Resetting THEN
	fbPackStates.Resetting_SC := FALSE;
	CASE eResetting OF
		E_Resetting.Idle :
            stSetParam_Z.rPosition_mm := 0;
			stSetParam_Z.rVeloctiy_mm_s := 2000;  
			eResetting := E_Resetting.eGripperSetOpen;
			
		E_Resetting.eGripperSetOpen :
			IF GripperIsOpen THEN
				eResetting := E_Resetting.eGripperIsOpen;
			END_IF
			
		E_Resetting.eGripperIsOpen :
			// No Condition
			eResetting := E_Resetting.eMotionInit_Z;			
			
		E_Resetting.eMotionInit_Z :
			IF mcMoveAbs_Z.Done THEN
				eResetting := E_Resetting.eMotionInitDone_Z; 
			END_IF

		E_Resetting.eMotionInitDone_Z :
			;;
	END_CASE
	 
	IF eResetting = E_Resetting.eMotionInitDone_Z THEN
		fbPackStates.Resetting_SC := TRUE;
	END_IF
ELSE
	eResetting := E_Resetting.Idle;
END_IF

(**********************************************************************************************************************
    YOUR CODE HERE
**********************************************************************************************************************)
IF fbPackStates.state.Starting THEN
	fbPackStates.Starting_SC := FALSE;
	CASE eStarting OF
		E_Starting.Idle :
            stSetParam_X.rPosition_mm := -30;
			stSetParam_X.rVeloctiy_mm_s := 2000;  
			eStarting := E_Starting.eMotionStarting;

		E_Starting.eMotionStarting :
			IF mcMoveAbs_X.Done THEN
				eStarting := E_Starting.eMotionStartingDone; 
			END_IF

		E_Starting.eMotionStartingDone :
			;
						
	END_CASE
	 
	IF (eStarting = E_Starting.eMotionStartingDone) THEN
		fbPackStates.Starting_SC := TRUE;
	END_IF
ELSE
	eStarting := E_Starting.Idle;
END_IF

IF fbPackStates.state.Execute THEN
	fbPackStates.Execute_SC := FALSE;
	(*
		Execute State Machine.
	*)
	CASE stStateMachineInfo.eState OF
		E_ExecuteCorner.eIdle :
			stStateMachineInfo.strState := 'Idle';
			stSetParam_X.rPosition_mm := 20;
			stStateMachineInfo.eState := E_ExecuteCorner.eMoveCornerOne;

		E_ExecuteCorner.eMoveCornerOne :
			stStateMachineInfo.strState := 'Motion Corner One';
			IF mcMoveAbs_X.Done THEN
				stStateMachineInfo.eState := E_ExecuteCorner.eMoveCornerOneDone; 
			END_IF

		E_ExecuteCorner.eMoveCornerOneDone :
			stStateMachineInfo.strState := 'Motion Corner One Done';

			stSetParam_X.rPosition_mm := -20;
			stStateMachineInfo.eState := E_ExecuteCorner.eMoveCornerThree;

		E_ExecuteCorner.eMoveCornerThree :
			stStateMachineInfo.strState := 'Motion Corner Three';
			IF mcMoveAbs_X.Done THEN
				stStateMachineInfo.eState := E_ExecuteCorner.eMoveCornerThreeDone; 
			END_IF

		E_ExecuteCorner.eMoveCornerThreeDone :
			stStateMachineInfo.strState := 'Motion Corner Three Done'; 

			stSetParam_X.rPosition_mm := 20;
			stStateMachineInfo.eState := E_ExecuteCorner.eMoveCornerOne;

	END_CASE
	;
ELSE
	stStateMachineInfo.strState := 'Idle';
	stStateMachineInfo.eState := E_ExecuteCorner.eIdle;
END_IF



(**********************************************************************************************************************
    Get Execute state machine in a DINT format
**********************************************************************************************************************)
stStateMachineInfo.diState := stStateMachineInfo.eState;
	
(**********************************************************************************************************************
	Utility FBs for motion, Do not modify
**********************************************************************************************************************)
ACT_ForAxis_X();
// Action for Y axis if defined
ACT_ForAxis_Z();

ACT_ForGripper();</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b7ba01cf-22f6-45c0-a794-f5960a162608</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PRG_MapBox" pouType="program">
                <interface>
                  <localVars>
                    <variable name="UA_ReadCounterFromStation">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
	Write from Siemens to ctrX Core

 Used to check if read is running</xhtml>
                      </documentation>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Estop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Start">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_In_Stop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Data_1">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Data_2">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Data_3">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Temperature">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="UA_Balluf_bcm0002_Status">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="UA_Festo_SetOut">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_DL_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_ZL_BCD1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_ZL_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_O300_ZL_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_D50_SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_Value">
                      <type>
                        <DWORD />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_Scale">
                      <type>
                        <SINT />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_SSC1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_SSC2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_A">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_U300_P50_SSC4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalInput_32_Input_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_WriteCounterToStation">
                      <type>
                        <DINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">
	Siemens Read from ctrX Core

 Used to check if write is running</xhtml>
                      </documentation>
                    </variable>
                    <variable name="UA_ButtonAndSignal_Out_Idle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_Out_Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_ButtonAndSignal_Out_Stopped">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_Schunk_mms_Value">
                      <type>
                        <WORD />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_0_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_1_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_2_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_0">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_4">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_5">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_6">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="UA_DigitalOutput_32_Output_3_7">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">    (*
        Values from Profinet Station
    *)
    
    // Get Value from Profinet Station with UA Client Write
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Estop     := UA_ButtonAndSignal_In_Estop;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset     := UA_ButtonAndSignal_In_Reset;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start     := UA_ButtonAndSignal_In_Start;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop      := UA_ButtonAndSignal_In_Stop;
    // Values from Balluff accelerometer
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_1         := UA_Balluf_bcm0002_Data_1;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_2         := UA_Balluf_bcm0002_Data_1;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_3         := UA_Balluf_bcm0002_Data_1;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Status         := UA_Balluf_bcm0002_Status;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Temperature    := UA_Balluf_bcm0002_Temperature;

    // Values from Baumer O300 DL
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.Value          := UA_O300_DL_Value;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.A              := UA_O300_DL_A;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.Q              := UA_O300_DL_Q;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.BCD1           := UA_O300_DL_BCD1;                

    // Values from Baumer O300 ZL                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.A              := UA_O300_ZL_A;                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.Q              := UA_O300_ZL_Q;                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.BCD1           := UA_O300_ZL_BCD1;                

    // Values from Baumer U300 D50
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Value         := UA_U300_D50_Value;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.A             := UA_U300_D50_A;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Q             := UA_U300_D50_Q;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Scale         := UA_U300_D50_Scale;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC1          := UA_U300_D50_SSC1;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC2          := UA_U300_D50_SSC2;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC4          := UA_U300_D50_SSC4;  
    
    // Values from Baumer U300 P50
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Value         := UA_U300_P50_Value;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.A             := UA_U300_P50_A;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Q             := UA_U300_P50_Q;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Scale         := UA_U300_P50_Scale;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC1          := UA_U300_P50_SSC1;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC2          := UA_U300_P50_SSC2;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC4          := UA_U300_P50_SSC4;  
    
    // Values from Gripper sensor
    GVL_Abox.uaAboxInterface.uaSchunk.Value                 := UA_Schunk_mms_Value;  
    
    // Get 32 Digital Input
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_0          := UA_DigitalInput_32_Input_0_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_1          := UA_DigitalInput_32_Input_0_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_2          := UA_DigitalInput_32_Input_0_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_3          := UA_DigitalInput_32_Input_0_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_4          := UA_DigitalInput_32_Input_0_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_5          := UA_DigitalInput_32_Input_0_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_6          := UA_DigitalInput_32_Input_0_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_7          := UA_DigitalInput_32_Input_0_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_0          := UA_DigitalInput_32_Input_1_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_1          := UA_DigitalInput_32_Input_1_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_2          := UA_DigitalInput_32_Input_1_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_3          := UA_DigitalInput_32_Input_1_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_4          := UA_DigitalInput_32_Input_1_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_5          := UA_DigitalInput_32_Input_1_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_6          := UA_DigitalInput_32_Input_1_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_7          := UA_DigitalInput_32_Input_1_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_0          := UA_DigitalInput_32_Input_2_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_1          := UA_DigitalInput_32_Input_2_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_2          := UA_DigitalInput_32_Input_2_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_3          := UA_DigitalInput_32_Input_2_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_4          := UA_DigitalInput_32_Input_2_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_5          := UA_DigitalInput_32_Input_2_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_6          := UA_DigitalInput_32_Input_2_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_7          := UA_DigitalInput_32_Input_2_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_0          := UA_DigitalInput_32_Input_3_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_1          := UA_DigitalInput_32_Input_3_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_2          := UA_DigitalInput_32_Input_3_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_3          := UA_DigitalInput_32_Input_3_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_4          := UA_DigitalInput_32_Input_3_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_5          := UA_DigitalInput_32_Input_3_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_6          := UA_DigitalInput_32_Input_3_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_7          := UA_DigitalInput_32_Input_3_7;
    
    (*
        Values to Profinet Station
    *)
	UA_WriteCounterToStation := UA_WriteCounterToStation + 1;

    // Set Visual Signals
	UA_ButtonAndSignal_Out_Execute 	:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute;
	UA_ButtonAndSignal_Out_Idle 	:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle;
	UA_ButtonAndSignal_Out_Stopped	:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped;
    
    // Set Gripper value
    UA_Festo_SetOut                 := NOT GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut;
    
    // Set 32 digital outputs
    UA_DigitalOutput_32_Output_0_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0;
    UA_DigitalOutput_32_Output_0_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1;
    UA_DigitalOutput_32_Output_0_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2;
    UA_DigitalOutput_32_Output_0_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3;
    UA_DigitalOutput_32_Output_0_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4;
    UA_DigitalOutput_32_Output_0_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5;
    UA_DigitalOutput_32_Output_0_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6;
    UA_DigitalOutput_32_Output_0_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7;
    UA_DigitalOutput_32_Output_1_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0;
    UA_DigitalOutput_32_Output_1_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1;
    UA_DigitalOutput_32_Output_1_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2;
    UA_DigitalOutput_32_Output_1_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3;
    UA_DigitalOutput_32_Output_1_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4;
    UA_DigitalOutput_32_Output_1_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5;
    UA_DigitalOutput_32_Output_1_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6;
    UA_DigitalOutput_32_Output_1_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7;
    UA_DigitalOutput_32_Output_2_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0;
    UA_DigitalOutput_32_Output_2_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1;
    UA_DigitalOutput_32_Output_2_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2;
    UA_DigitalOutput_32_Output_2_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3;
    UA_DigitalOutput_32_Output_2_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4;
    UA_DigitalOutput_32_Output_2_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5;
    UA_DigitalOutput_32_Output_2_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6;
    UA_DigitalOutput_32_Output_2_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7;
    UA_DigitalOutput_32_Output_3_0  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0;
    UA_DigitalOutput_32_Output_3_1  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1;
    UA_DigitalOutput_32_Output_3_2  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2;
    UA_DigitalOutput_32_Output_3_3  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3;
    UA_DigitalOutput_32_Output_3_4  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4;
    UA_DigitalOutput_32_Output_3_5  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5;
    UA_DigitalOutput_32_Output_3_6  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6;
    UA_DigitalOutput_32_Output_3_7  := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7;
    
PRG_CHECK_IO();</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>81a742c1-f168-4201-931a-c5044bbbda80</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PRG_CHECK_IO" pouType="program">
                <interface>
                  <localVars>
                    <variable name="testButton_1">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="testButton_2">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="testButton_3">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="clignote">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="changeMeSlow">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="clignoteSlow">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="changeMe">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="NotResetTest">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">testButton_1 := GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset;
testButton_2 := GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start;
testButton_3 := GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop;

IF GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset AND
   NotResetTest										   THEN
	NotResetTest := FALSE;
	
    GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := FALSE;
    
    GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute := FALSE;	
    GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle := FALSE;	
    GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped := FALSE;	

    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7 := FALSE;
    
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7 := FALSE;
    
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7 := FALSE;

    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6 := FALSE;
    GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7 := FALSE;	
END_IF

IF GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset AND
   GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start AND
   GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop  THEN
	NotResetTest := TRUE;
END_IF


IF NotResetTest THEN 
	
	// Quick Blink
	clignote(IN := changeMe,
			 PT := T#500MS);
			 
	IF clignote.Q THEN
		changeMe := FALSE;
	ELSE
		changeMe := TRUE;
	END_IF

	// Slow Blink
	clignoteSlow(IN := changeMeSlow,
			 	 PT := T#2500MS);
			 
	IF clignoteSlow.Q THEN
		changeMeSlow := FALSE;
	ELSE
		changeMeSlow := TRUE;
	END_IF
	
	IF (NOT GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut) AND clignoteSlow.Q THEN
		GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := TRUE;
	ELSIF GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut AND clignoteSlow.Q THEN
		GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := FALSE;
	END_IF
	
	IF (NOT GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0) AND clignote.Q THEN
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute := TRUE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle := TRUE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped := TRUE;	
	
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7 := TRUE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7 := TRUE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7 := TRUE;

		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6 := TRUE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7 := TRUE;
	ELSIF GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 AND clignote.Q THEN
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute := FALSE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle := FALSE;	
		GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped := FALSE;	

		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7 := FALSE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7 := FALSE;
		
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7 := FALSE;

		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6 := FALSE;
		GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7 := FALSE;
	END_IF;
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d5610066-b322-4d3c-a26d-47ad8b18dbd0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_PackStates" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SoftEstop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Hold">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="Unhold">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="Clearing_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="Stopping_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="Aborting_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="Resetting_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="Starting_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="Execute_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="Holding_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="Unholding_SC">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="remote">
                      <type>
                        <derived name="UA_ButtonAndSignal" />
                      </type>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="state">
                      <type>
                        <derived name="ST_PackState" />
                      </type>
                    </variable>
                    <variable name="strState">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="initialized">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ePackStates">
                      <type>
                        <derived name="E_PackStates" />
                      </type>
                    </variable>
                    <variable name="rTrigStop">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="rTrigStart">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="rTrigReset">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="clignote">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="changeMe">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// 
//	Init
//
IF Enable THEN
	IF NOT initialized THEN
		// Init at Aborted when entering state machine.
		initialized := TRUE;
		ePackStates := E_PackStates.Aborted;
	END_IF;
ELSE
	ePackStates := E_PackStates.NotActive;
	initialized := FALSE;
END_IF

//
//	Manage Inputs
//
rTrigStop(CLK := remote.In_Stop);
rTrigStart(CLK := remote.In_Start);
rTrigReset(CLK := remote.In_Reset);

CASE ePackStates OF
	E_PackStates.NotActive	:
		strState := 'Not Active';
		;
	E_PackStates.Aborting 	:;
		strState := 'Aborting';
		IF Aborting_SC THEN
			ePackStates := E_PackStates.Aborted;
		END_IF
		
	E_PackStates.Aborted 	:
		strState := 'Aborted';
		IF rTrigReset.Q THEN
			ePackStates := E_PackStates.Clearing;
		END_IF
	
	E_PackStates.Clearing 	:
		strState := 'Clearing';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF Clearing_SC THEN
			ePackStates := E_PackStates.Stopped;	
		END_IF

	E_PackStates.Stopped 	:
		strState := 'Stopped';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigReset.Q THEN
			ePackStates := E_PackStates.Resetting;
		END_IF

	E_PackStates.Stopping 	:
		strState := 'Stopping';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF Stopping_SC THEN
			ePackStates := E_PackStates.Stopped;
		END_IF

	E_PackStates.Resetting 	:
		strState := 'Resetting';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigStop.Q THEN
			ePackStates := E_PackStates.Stopping;
		ELSIF Resetting_SC THEN
			ePackStates := E_PackStates.Idle;			
		END_IF

	E_PackStates.Idle 		:
		strState := 'Idle';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigStop.Q THEN
			ePackStates := E_PackStates.Stopping;
		ELSIF rTrigStart.Q THEN
			ePackStates := E_PackStates.Starting;
		END_IF

	E_PackStates.Starting 	:
		strState := 'Starting';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigStop.Q THEN
			ePackStates := E_PackStates.Stopping;
		ELSIF Starting_SC THEN
			ePackStates := E_PackStates.Execute;	
		END_IF

	E_PackStates.Execute 	:
		strState := 'Execute';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigStop.Q THEN
			ePackStates := E_PackStates.Stopping;
		ELSIF Hold		 THEN
			ePackStates := E_PackStates.Holding;	
		ELSIF Execute_SC THEN
			ePackStates := E_PackStates.Execute;	
		END_IF
		
	(* Held Loop *)
	E_PackStates.Holding	:;
		strState := 'Holding';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigStop.Q THEN
			ePackStates := E_PackStates.Stopping;
		ELSIF Holding_SC THEN
			ePackStates := E_PackStates.Held;	
		END_IF
		
	E_PackStates.Held		:;
		strState := 'Held';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigStop.Q THEN
			ePackStates := E_PackStates.Stopping;
		ELSIF Unhold THEN
			ePackStates := E_PackStates.Unholding;	
		END_IF

	E_PackStates.Unholding	:;
		strState := 'Unholding';
		// E-Stop Active Low
		IF NOT remote.In_Estop OR SoftEstop THEN
			ePackStates := E_PackStates.Aborting;
		ELSIF rTrigStop.Q THEN
			ePackStates := E_PackStates.Stopping;
		ELSIF Unholding_SC THEN
			ePackStates := E_PackStates.Execute;	
		END_IF

END_CASE

// Quick Blink
clignote(IN := changeMe,
		 PT := T#500MS);
			 
IF clignote.Q THEN
	changeMe := FALSE;
ELSE
	changeMe := TRUE;
END_IF

// Set Output states
state.Aborting	:= (ePackStates = E_PackStates.Aborting);
state.Aborted	:= (ePackStates = E_PackStates.Aborted);
state.Clearing	:= (ePackStates = E_PackStates.Clearing);
state.Stopped	:= (ePackStates = E_PackStates.Stopped);
state.Stopping	:= (ePackStates = E_PackStates.Stopping);
state.Resetting	:= (ePackStates = E_PackStates.Resetting);
state.Idle		:= (ePackStates = E_PackStates.Idle);
state.Starting	:= (ePackStates = E_PackStates.Starting);
state.Execute	:= (ePackStates = E_PackStates.Execute);

// Set Output signals
remote.Out_Stopped := (ePackStates = E_PackStates.Stopped);

IF ePackStates = E_PackStates.Starting THEN
	IF remote.Out_Execute AND clignote.Q THEN
		remote.Out_Execute := FALSE;
	ELSIF NOT remote.Out_Execute AND clignote.Q THEN
		remote.Out_Execute := TRUE;
	END_IF
ELSE
	remote.Out_Execute := (ePackStates = E_PackStates.Execute);	
END_IF

IF ePackStates = E_PackStates.Resetting THEN
	IF remote.Out_Idle AND clignote.Q THEN
		remote.Out_Idle := FALSE;
	ELSIF NOT remote.Out_Idle AND clignote.Q THEN
		remote.Out_Idle := TRUE;
	END_IF
ELSE
	remote.Out_Idle := (ePackStates = E_PackStates.Idle);	
END_IF

IF ePackStates = E_PackStates.Stopping OR 
   ePackStates = E_PackStates.Clearing THEN
	IF remote.Out_Stopped AND clignote.Q THEN
		remote.Out_Stopped := FALSE;
	ELSIF NOT remote.Out_Stopped AND clignote.Q THEN
		remote.Out_Stopped := TRUE;
	END_IF
ELSE
	remote.Out_Stopped := (ePackStates = E_PackStates.Stopped);	
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c3dd3805-1967-4990-ac92-e8b5240dbfb5</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_GripperState" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Default Input </xhtml>
                      </documentation>
                    </variable>
                    <variable name="thOpen">
                      <type>
                        <WORD />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> User Defined Inputs </xhtml>
                      </documentation>
                    </variable>
                    <variable name="thClose">
                      <type>
                        <WORD />
                      </type>
                      <initialValue>
                        <simpleValue value="950" />
                      </initialValue>
                    </variable>
                    <variable name="thPartMin">
                      <type>
                        <WORD />
                      </type>
                      <initialValue>
                        <simpleValue value="800" />
                      </initialValue>
                    </variable>
                    <variable name="thPartMax">
                      <type>
                        <WORD />
                      </type>
                      <initialValue>
                        <simpleValue value="860" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="hw">
                      <type>
                        <derived name="UA_Schunk_mms" />
                      </type>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="InOperation">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Default Outputs </xhtml>
                      </documentation>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="IsOpen">
                      <type>
                        <BOOL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> User Outputs </xhtml>
                      </documentation>
                    </variable>
                    <variable name="IsClosed">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="PartPresent">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="eInOperationBase">
                      <type>
                        <derived name="E_InOperationBase" />
                      </type>
                      <initialValue>
                        <simpleValue value="E_InOperationBase.Idle" />
                      </initialValue>
                    </variable>
                    <variable name="eInOpGripper">
                      <type>
                        <derived name="E_InOpGripper" />
                      </type>
                      <initialValue>
                        <simpleValue value="E_InOpGripper.IsIdle" />
                      </initialValue>
                    </variable>
                    <variable name="tonIdleCondition">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Input management. While gripper is moving, it must not be seen as an Idle Condition
	Here we use a timer as Input Management.
*)

tonIdleCondition(IN := (((hw.Value &gt; thOpen) AND (hw.Value &lt; thPartMin))  OR
		                ((hw.Value &lt; thClose) AND (hw.Value &gt; thPartMax))),
				 PT := T#1S);

(*
	Main State Machine
*)
CASE eInOperationBase OF
	E_InOperationBase.Idle :
		IF Enable THEN
			eInOperationBase := E_InOperationBase.Init;	
		END_IF
		
	E_InOperationBase.Init :
		IF NOT Enable THEN
			eInOperationBase := E_InOperationBase.Idle;
		ELSIF tonIdleCondition.Q THEN
		    eInOpGripper := E_InOpGripper.IsIdle;
		 	eInOperationBase := E_InOperationBase.Error;
		ELSE // Init internal state machine and jump in it
			IF hw.Value &lt; thOpen THEN
				eInOpGripper := E_InOpGripper.IsOpen;
			ELSIF hw.Value &gt; thClose THEN
				eInOpGripper := E_InOpGripper.IsClosed;
			ELSE
				eInOpGripper := E_InOpGripper.PartPresent;
			END_IF
			eInOperationBase := E_InOperationBase.InOp;
		END_IF
		
	E_InOperationBase.InOp :
		(*
			Sub State Machine Here
		*)
		// Machine initilized in E_InOperationBase.Init
		// Error condition again, air pressure could be removed while machine is running
		IF NOT Enable THEN
			eInOperationBase := E_InOperationBase.Idle;
		ELSIF tonIdleCondition.Q THEN			// Error condition
		    eInOpGripper := E_InOpGripper.IsIdle;
		 	eInOperationBase := E_InOperationBase.Error;
		ELSE // Init internal state machine and jump in it
			CASE eInOpGripper OF
				E_InOpGripper.IsIdle :
					; // Do nothing, condition is checked in IF
				E_InOpGripper.IsOpen :
					IF hw.Value &gt; thClose THEN
						eInOpGripper := E_InOpGripper.IsClosed;
					ELSIF (hw.Value &gt; thPartMin) AND (hw.Value &lt; thPartMax) THEN
						eInOpGripper := E_InOpGripper.PartPresent;
					END_IF
				E_InOpGripper.IsClosed :
					IF hw.Value &lt; thOpen THEN
						eInOpGripper := E_InOpGripper.IsOpen;
					END_IF
				E_InOpGripper.PartPresent :
					IF hw.Value &lt; thOpen THEN
						eInOpGripper := E_InOpGripper.IsOpen;
					END_IF
			END_CASE
		END_IF
	E_InOperationBase.Error :
		IF NOT Enable THEN
			eInOperationBase := E_InOperationBase.Idle;
		END_IF
END_CASE

(*
	Output Management
*)
InOperation			:= (eInOperationBase = E_InOperationBase.InOp);
Error				:= (eInOperationBase = E_InOperationBase.Error);

IsOpen				:= (eInOperationBase = E_InOperationBase.InOp) AND (eInOpGripper = E_InOpGripper.IsOpen);
IsClosed			:= (eInOperationBase = E_InOperationBase.InOp) AND (eInOpGripper = E_InOpGripper.IsClosed);
PartPresent			:= (eInOperationBase = E_InOperationBase.InOp) AND (eInOpGripper = E_InOpGripper.PartPresent);
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9b5d7a73-be36-44c1-b38e-c759b2cb4022</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_CloseGripper" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="thClosedMin">
                      <type>
                        <WORD />
                      </type>
                      <initialValue>
                        <simpleValue value="950" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="hwSensor">
                      <type>
                        <derived name="UA_Schunk_mms" />
                      </type>
                    </variable>
                    <variable name="hwEV">
                      <type>
                        <derived name="UA_Festo" />
                      </type>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="Done">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Active">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="tnCheckDone">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="rExecute">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="eExecuteDone">
                      <type>
                        <derived name="E_ExecuteDone" />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(* 
	Manage Inputs
*)
rExecute(CLK := Execute);
// Timer.Q true if Execute and not threshold for more thant 1 sec.
tnCheckDone(IN := Execute AND NOT (hwSensor.Value &gt; thClosedMin),
	        PT := T#1S);

CASE eExecuteDone OF
	E_ExecuteDone.Idle :
		IF rExecute.Q THEN
			eExecuteDone := E_ExecuteDone.Init;
		END_IF

	E_ExecuteDone.Init :
		// No init
		IF tnCheckDone.Q THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSE
			eExecuteDone := E_ExecuteDone.InOp;
		END_IF

	E_ExecuteDone.InOp :
		IF tnCheckDone.Q THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSIF (hwSensor.Value &gt; thClosedMin) THEN
			eExecuteDone := E_ExecuteDone.Done;
		END_IF
	
	E_ExecuteDone.Done :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF

	E_ExecuteDone.Error :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF
END_CASE

IF eExecuteDone = E_ExecuteDone.InOp THEN
	hwEV.SetOut := FALSE;
END_IF

Done := (eExecuteDone = E_ExecuteDone.Done);
Active := (eExecuteDone = E_ExecuteDone.Init) OR (eExecuteDone = E_ExecuteDone.InOp) ;
Error := (eExecuteDone = E_ExecuteDone.Error);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e638188a-c294-469b-9937-6dd92bfe7999</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_OpenGripper" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="thOpenMax">
                      <type>
                        <WORD />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="hwSensor">
                      <type>
                        <derived name="UA_Schunk_mms" />
                      </type>
                    </variable>
                    <variable name="hwEV">
                      <type>
                        <derived name="UA_Festo" />
                      </type>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="Done">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Active">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="tnCheckDone">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="rExecute">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="eExecuteDone">
                      <type>
                        <derived name="E_ExecuteDone" />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">(* 
	Manage Inputs
*)
rExecute(CLK := Execute);
// Timer.Q true if Execute and not threshold for more thant 1 sec.
tnCheckDone(IN := Execute AND NOT (hwSensor.Value &lt; thOpenMax),
	        PT := T#1S);

CASE eExecuteDone OF
	E_ExecuteDone.Idle :
		IF rExecute.Q THEN
			eExecuteDone := E_ExecuteDone.Init;
		END_IF

	E_ExecuteDone.Init :
		// No init
		IF tnCheckDone.Q THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSE
			eExecuteDone := E_ExecuteDone.InOp;
		END_IF

	E_ExecuteDone.InOp :
		IF tnCheckDone.Q THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSIF (hwSensor.Value &lt; thOpenMax) THEN
			eExecuteDone := E_ExecuteDone.Done;
		END_IF
	
	E_ExecuteDone.Done :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF

	E_ExecuteDone.Error :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF
END_CASE

IF eExecuteDone = E_ExecuteDone.InOp THEN
	hwEV.SetOut := TRUE;
END_IF

Done := (eExecuteDone = E_ExecuteDone.Done);
Active := (eExecuteDone = E_ExecuteDone.Init) OR (eExecuteDone = E_ExecuteDone.InOp) ;
Error := (eExecuteDone = E_ExecuteDone.Error);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>3afb73d4-00d6-4071-acdc-99072e7c4f53</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#CmpLog" Namespace="CmpLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="" />
                <Library Name="#IecVarAccess" Namespace="IecVarAccessLibrary" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecVarAccess, 3.3.1.20 (System)" />
                <Library Name="CmpIecTask, 3.5.17.40 (System)" Namespace="CmpIecTask" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
                <Library Name="#CXA_BASE" Namespace="CXAC_Base" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXAC_Base, 1.16.0.0 (Bosch Rexroth AG)" />
                <Library Name="#CXA_COMMONTYPES" Namespace="CXA_CommonTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_CommonTypes, 1.14.0.0 (Bosch Rexroth AG)" />
                <Library Name="#CXA_UTILITIES" Namespace="CXA_Utilities" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_Utilities, 1.14.0.3 (Bosch Rexroth AG)" />
                <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Standard, 3.5.17.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CXA_PLCOPEN" Namespace="CXA_PLCopen" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_PLCopen, * (Bosch Rexroth AG)" />
                <Library Name="#CXA_MOTION_INTERFACE" Namespace="CXA_MotionInterface" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_MotionInterface, * (Bosch Rexroth AG)" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>25c4f9d0-b5ed-4d91-b717-7770d2fda049</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>51c5b47c-888b-4542-a4a6-3caad47a8241</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4096</Type>
                  <Id>1001 0080</Id>
                  <Version>1.16.0.0</Version>
                </DeviceIdentification>
                <Connector moduleType="42400" interface="BRC:DataLayer" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="256" interface="Common.PCI" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet>
                  <Parameter ParameterId="2147483920" type="std:BOOL" IndexInDevDesc="0">
                    <Attributes offlineaccess="none" onlineaccess="none" />
                    <Value name="_x0032_147483920" visiblename="Use scheduler priority" offlineaccess="none" onlineaccess="none" desc="Use scheduler priority as IEC task priority.">True</Value>
                    <Name>Use scheduler priority</Name>
                    <Description>Use scheduler priority as IEC task priority.</Description>
                  </Parameter>
                </DeviceParameterSet>
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations>
              <configuration name="Realtime_Data">
                <addData>
                  <data name="Device" handleUnknown="discard">
                    <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" fixedIndex="0" xmlns="">
                      <DeviceType>
                        <DeviceIdentification>
                          <Type>42420</Type>
                          <Id>1001 0000</Id>
                          <Version>1.8.0.0</Version>
                        </DeviceIdentification>
                        <Connector moduleType="42420" role="child" interface="BRC:DataLayer" connectorId="0">
                          <HostParameterSet />
                        </Connector>
                        <Connector moduleType="42421" interface="BRC:DataLayerPath" connectorId="1">
                          <HostParameterSet />
                        </Connector>
                        <DeviceParameterSet />
                      </DeviceType>
                    </Device>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9b23d138-fe71-4e6b-a0e9-7d9d4fbc7618</ObjectId>
                  </data>
                </addData>
              </configuration>
            </configurations>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1d54792c-3e19-43e1-baaf-7044e39c34b1</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="PracticalWork_01" ObjectId="1d54792c-3e19-43e1-baaf-7044e39c34b1">
          <Object Name="BaseInterfaceUa" ObjectId="51c5b47c-888b-4542-a4a6-3caad47a8241">
            <Object Name="Library Manager" ObjectId="25c4f9d0-b5ed-4d91-b717-7770d2fda049" />
            <Folder Name="POUs">
              <Object Name="PRG_Gripper" ObjectId="b7ba01cf-22f6-45c0-a794-f5960a162608">
                <Object Name="ACT_ForAxis_X" ObjectId="c942ee71-54df-4622-ab74-7fabaf8b5da6" />
                <Object Name="ACT_ForAxis_Z" ObjectId="121ee88f-6e85-4783-aa79-b03395285995" />
                <Object Name="ACT_BaseInit" ObjectId="a39d17b3-4c87-4b44-9064-cff428628cac" />
                <Object Name="ACT_ForGripper" ObjectId="8cd45c85-2e84-49bb-bab0-9f24432f191f" />
              </Object>
            </Folder>
            <Object Name="MainTask" ObjectId="78c08a0f-8c0a-4cae-993a-8ea4cc6c8e72" />
            <Folder Name="UA_Box">
              <Object Name="GVL_Abox" ObjectId="31b95c15-5cf4-485c-8394-f9c0ad5586f3" />
              <Object Name="PRG_MapBox" ObjectId="81a742c1-f168-4201-931a-c5044bbbda80" />
              <Object Name="PRG_CHECK_IO" ObjectId="d5610066-b322-4d3c-a26d-47ad8b18dbd0" />
            </Folder>
            <Folder Name="DUT_ABox">
              <Object Name="UA_DigitalInput_32" ObjectId="a8f884db-ac4f-40d0-bcab-8badc6587dcc" />
              <Object Name="UA_DigitalOutput_32" ObjectId="7b52e73f-21ed-4643-ae78-7cbc7194e35a" />
              <Object Name="UA_ButtonAndSignal" ObjectId="b3f9a3b5-82f9-447e-a261-cb2d18ffb6eb" />
              <Object Name="UA_O300_DL" ObjectId="6026491a-5615-4c42-b2f8-5562044ffab5" />
              <Object Name="UA_O300_ZL" ObjectId="0292b894-9834-4595-b44c-87810191b2ca" />
              <Object Name="UA_U300_D50" ObjectId="9f70432a-c970-455e-a9e2-baa1b526f168" />
              <Object Name="UA_U300_P50" ObjectId="7f0e2eb1-ba19-4d1b-be94-9623d8b4ba56" />
              <Object Name="UA_Schunk_mms" ObjectId="e1630ce8-bc96-43e5-9e0c-58c82b66b1bc" />
              <Object Name="UA_Balluf_bcm0002" ObjectId="6fac8e51-2212-48d9-b853-8070ad243c78" />
              <Object Name="UA_Festo" ObjectId="634e16b1-da38-4e2b-b9e1-42ee4bdb38cc" />
              <Object Name="UA_AnalogIn" ObjectId="9609e6b4-7275-4343-861c-fef510482801" />
              <Object Name="UA_AnalogOut" ObjectId="c2ad5a14-bba9-482f-9eb2-2a91ac4fe72c" />
              <Object Name="UA_AboxInterface" ObjectId="03a0b2ac-89d3-4829-82ce-c9ce9256e8f7" />
            </Folder>
            <Folder Name="DUTs">
              <Object Name="ST_PlcOpenFbs" ObjectId="91228204-eb16-473b-8fe0-800c02ac25d9" />
              <Object Name="ST_SetMotionParam" ObjectId="4ebefe34-98e8-4b46-a015-351f1e587d13" />
              <Object Name="ST_StateMachineInfo" ObjectId="b0bc352a-3795-4e69-ba2c-5318db5e9d2b" />
              <Object Name="ST_RemotePositions" ObjectId="8a3cf65a-db13-4abf-b4e5-ed6c70bc741b" />
              <Object Name="ST_TestFbGripperHmi" ObjectId="e8ec25aa-3315-4c9e-9c35-687083d2f5c5" />
            </Folder>
            <Folder Name="GVLs">
              <Object Name="GVL_AxisDefines" ObjectId="fbed7d43-1b1d-44ab-b273-bda7af868979" />
            </Folder>
            <Folder Name="Pack">
              <Object Name="E_PackStates" ObjectId="a82c83d0-6bfb-4016-ae0d-d8d2eb401ddf" />
              <Object Name="FB_PackStates" ObjectId="c3dd3805-1967-4990-ac92-e8b5240dbfb5" />
              <Object Name="ST_PackState" ObjectId="73908a29-0b5c-458b-b446-ad01fcefda61" />
              <Object Name="E_Clearing" ObjectId="c2c8432c-60b0-42ed-935e-917d6ddf7b68" />
              <Object Name="E_Stopping" ObjectId="1082dedb-5527-49df-b110-5490512a58f7" />
              <Object Name="E_Aborted" ObjectId="8ab0d110-7ef2-44c9-856b-3edda67beff7" />
              <Object Name="E_Resetting" ObjectId="ffc13a4f-71bd-4053-b816-c3e7353884a7" />
              <Object Name="E_Starting" ObjectId="8574ae67-1fc0-4656-8e16-571529f1a584" />
              <Object Name="E_Aborting" ObjectId="38acc82c-b7d9-4192-b4fb-326340db6f3a" />
            </Folder>
            <Folder Name="YourJob">
              <Object Name="E_InOperationBase" ObjectId="a9359279-3f40-47d3-ae17-e926eb3489d1" />
              <Object Name="E_InOpGripper" ObjectId="c144f9bc-04ac-43b8-9eab-3b0226c81fd6" />
              <Object Name="FB_GripperState" ObjectId="9b5d7a73-be36-44c1-b38e-c759b2cb4022" />
              <Object Name="FB_CloseGripper" ObjectId="e638188a-c294-469b-9937-6dd92bfe7999" />
              <Object Name="FB_OpenGripper" ObjectId="3afb73d4-00d6-4071-acdc-99072e7c4f53" />
              <Object Name="E_ExecuteDone" ObjectId="0239a653-e5ee-4ff7-b7b0-d124031a111f" />
            </Folder>
          </Object>
          <Object Name="Realtime_Data" ObjectId="9b23d138-fe71-4e6b-a0e9-7d9d4fbc7618" />
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>